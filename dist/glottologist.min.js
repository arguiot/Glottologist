class Glottologist{assign(a,b){let c={};c[a]=b,this.data=Object.assign(this.data,c)}async autoGen(a){const b=document.querySelectorAll("[glot-model]");for(let c=0;c<b.length;c++){const d=b[c].getAttribute("glot-model");let e={};for(let c of a){const a=await this.gTranslate(b[c].innerHTML,c);e[c]=a}this.assign(d,e)}}constructor(a="en"){this.data={},this.pageLang=a,this.lang="undefined"==typeof window?a:navigator.language||navigator.userLanguage}gTranslate(a,b="en",c="auto"){return new Promise((d,f)=>{const g="https://translate.googleapis.com/translate_a/single?client=gtx&sl="+c+"&tl="+b+"&dt=t&q="+encodeURI(a);fetch(g).then(a=>{a.json().then(a=>{d(a[0][0][0])}).catch(a=>{f(a)})}).catch(a=>{f(a)})})}get(name,lang="auto",obj={}){let data={};"object"==typeof lang&&(data=lang,lang="string"==typeof obj?obj:"auto");let tmp,result;return"auto"==lang?(tmp=this.data[name][new String(this.lang).split("-")[0]],result=null==tmp?this.data[name][Object.keys(this.data[name])[0]]:tmp):(tmp=this.data[name][lang],result=null==tmp?this.data[name][Object.keys(this.data[name])[0]]:tmp),eval("`"+result+"`")}import(a){return new Promise((b,c)=>{fetch(a).then(a=>{a.json().then(a=>{this.data=Object.assign(this.data,a),b(a)}).catch(a=>{c(a)})}).catch(a=>{c(a)})})}locale(){const a=[...arguments];if(0==a.length){if("undefined"!=typeof window){const a=navigator.language||navigator.userLanguage,b=new String(this.lang).split("-")[0];return this.lang=b,this.lang}return this.lang="en",this.lang}return this.lang=a[0],this.lang}render(a="auto"){const b=document.querySelectorAll("[glot-model]");for(let c=0;c<b.length;c++){const d=b[c].getAttribute("glot-model"),e=this.get(d,a);null!=e&&this.pageLang!=a&&(b[c].innerHTML=e)}}}"function"==typeof define&&define.amd?define(()=>new Glottologist):"undefined"==typeof exports?"undefined"!=typeof global&&(global.Glottologist=new Glottologist):("undefined"!=typeof module&&module.exports&&(exports=module.exports=new Glottologist),exports.Glottologist=new Glottologist);